name: Build and Upload Deltroid
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

# concurrency:
#   group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
#   cancel-in-progress: true

# concurrency:
#   group: ${{ github.ref }}-${{ github.workflow }}
#   cancel-in-progress: true

env:
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}

jobs:
  build:
    name: Build and upload Deltroid
    strategy:
      fail-fast: false
      matrix:
        target:
          - Deltroid
        include:
          - target: Deltroid
            sdk: iphoneos
            scheme: Deltroid
          - target: Deltroid
            sdk: appletvos
            scheme: Deltroid
          - target: macOS (Catalyst)
            sdk: maccatalyst
            scheme: Deltroid

    runs-on: 'macos-13'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      # - name: Install Xcode
      #   uses: maxim-lobanov/setup-xcode@v1
      #   with:
      #     xcode-version: ${{ matrix.version }}

      # - name: Setup Xcode
      #   uses: maxim-lobanov/setup-xcode@v1.5.1
      #   with:
      #     xcode-version: '14.1'
      #     # xcode-select-path: /Applications/Xcode_${{ matrix.version }}.app/Contents/Developer

      - uses: actions/cache@v3
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}

      - name: Install dependencies
        run: brew install ldid

      - name: Build Deltroid
        run: |
          xcodebuild -workspace Deltroid.xcworkspace \
          -scheme ${{ matrix.scheme }} \
          -sdk ${{ matrix.sdk }} \
          archive -archivePath \
          ./archive \
          CODE_SIGNING_REQUIRED=NO \
          AD_HOC_CODE_SIGNING_ALLOWED=YES \
          CODE_SIGNING_ALLOWED=NO \
          DEVELOPMENT_TEAM=S32Z3HMYVQ \
          ORG_IDENTIFIER=com.joemattiello | xcpretty && exit ${PIPESTATUS[0]}

      - name: Fakesign app
        run: |
          rm -rf archive.xcarchive/Products/Applications/Deltroid.app/Frameworks/*.framework/Frameworks/
          ldid -SDeltroid/Deltroid.entitlements archive.xcarchive/Products/Applications/Deltroid.app/Deltroid

      - name: Convert to IPA
        run: |
          mkdir Payload
          mkdir Payload/${{ matrix.target }}.app
          cp -R archive.xcarchive/Products/Applications/Deltroid.app/ Payload/${{ matrix.target }}.app/
          zip -r ${{ matrix.target }}.ipa Payload

      - name: Upload Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: ${{ matrix.target }}.ipa
          path: ${{ matrix.target }}.ipa

      # - name: Upload IPA to S3
      #   if: ${{ github.branch == 'develop' }}
      #   uses: ebuckthal/s3-upload-artifact@v7
      #   with:
      #     bucket: 'sh-sysops'
      #     key: ${AWS_SECRET_ACCESS_KEY}
      #     path: 'Deltroid.ipa'

    # - name: Upload IPA to App Center
    #   uses: wzieba/AppCenter-Github-Action@v1
    #   if: ${{ github.branch == 'develop' }}
    #   with:
    #     appName: wzieba/Sample-App
    #     token: ${{secrets.APP_CENTER_TOKEN}}
    #     group: Testers
    #     file: Deltroid.ipa
    #     notifyTesters: true
    #     debug: false
